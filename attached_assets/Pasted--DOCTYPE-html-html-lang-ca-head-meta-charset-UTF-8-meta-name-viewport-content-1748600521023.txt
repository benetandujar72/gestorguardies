<!DOCTYPE html>
<html lang="ca">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Anàlisi Intel·ligent - Institut Bitàcola</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="{{ url_for('static', filename='css/style.css') }}" rel="stylesheet">
    <style>
        .ai-card {
            border-left: 4px solid #673ab7;
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        }
        .ai-loading {
            display: none;
            text-align: center;
            padding: 2rem;
        }
        .ai-content {
            white-space: pre-line;
            line-height: 1.6;
        }
        .chat-container {
            height: 400px;
            overflow-y: auto;
            border: 1px solid #dee2e6;
            border-radius: 0.375rem;
            padding: 1rem;
            background: #f8f9fa;
        }
        .chat-message {
            margin-bottom: 1rem;
            padding: 0.75rem;
            border-radius: 0.5rem;
        }
        .chat-user {
            background: #007bff;
            color: white;
            margin-left: 2rem;
        }
        .chat-ai {
            background: #6f42c1;
            color: white;
            margin-right: 2rem;
        }
        .category-card {
            cursor: pointer;
            transition: all 0.3s ease;
            border: 1px solid #dee2e6;
        }
        .category-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .score-badge {
            font-size: 1.1em;
            font-weight: bold;
        }
    </style>
</head>
<body>
    {% extends "base.html" %}

    {% block content %}
    <div class="container-fluid mt-4">
        <!-- Header with Filters -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h1>
                        <i class="fas fa-brain me-2 text-purple"></i>
                        Anàlisi Intel·ligent amb IA
                    </h1>
                    <div class="text-muted">
                        <i class="fas fa-robot me-1"></i>
                        Impulsat per Google Gemini
                    </div>
                </div>
                
                <!-- Filters -->
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <label for="courseFilter" class="form-label">Curs</label>
                                <select class="form-select" id="courseFilter">
                                    <option value="">Tots els cursos</option>
                                    <option value="1r ESO">1r ESO</option>
                                    <option value="2n ESO">2n ESO</option>
                                    <option value="3r ESO">3r ESO</option>
                                    <option value="4t ESO">4t ESO</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label for="trimesterFilter" class="form-label">Trimestre</label>
                                <select class="form-select" id="trimesterFilter">
                                    <option value="">Tots els trimestres</option>
                                    <option value="1r trimestre">1r trimestre</option>
                                    <option value="2n trimestre">2n trimestre</option>
                                    <option value="3r trimestre">3r trimestre</option>
                                </select>
                            </div>
                            <div class="col-md-4 d-flex align-items-end">
                                <button class="btn btn-primary me-2" onclick="loadAIAnalysis()">
                                    <i class="fas fa-sync-alt me-1"></i>Actualitzar Anàlisi
                                </button>
                                <button class="btn btn-outline-info" onclick="showChat()">
                                    <i class="fas fa-comment-dots me-1"></i>Chat IA
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content Tabs -->
        <ul class="nav nav-tabs" id="aiTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button">
                    <i class="fas fa-chart-line me-1"></i>Panorama General
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="categories-tab" data-bs-toggle="tab" data-bs-target="#categories" type="button">
                    <i class="fas fa-list me-1"></i>Anàlisi per Categories
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="predictions-tab" data-bs-toggle="tab" data-bs-target="#predictions" type="button">
                    <i class="fas fa-crystal-ball me-1"></i>Prediccions
                </button>
            </li>
        </ul>

        <div class="tab-content" id="aiTabsContent">
            <!-- Panorama General -->
            <div class="tab-pane fade show active" id="overview" role="tabpanel">
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card ai-card">
                            <div class="card-header">
                                <h5 class="mb-0">
                                    <i class="fas fa-chart-bar me-2"></i>
                                    Anàlisi Integral de Satisfacció
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="ai-loading" id="overviewLoading">
                                    <div class="spinner-border text-primary" role="status"></div>
                                    <p class="mt-2">Generant anàlisi intel·ligent...</p>
                                </div>
                                <div class="ai-content" id="overviewContent">
                                    Selecciona els filtres i fes clic a "Actualitzar Anàlisi" per generar l'informe intel·ligent.
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Anàlisi per Categories -->
            <div class="tab-pane fade" id="categories" role="tabpanel">
                <div class="row mt-4">
                    <div class="col-12">
                        <div id="categoriesGrid" class="row">
                            <!-- Categories will be loaded here -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- Prediccions -->
            <div class="tab-pane fade" id="predictions" role="tabpanel">
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card ai-card">
                            <div class="card-header">
                                <h5 class="mb-0">
                                    <i class="fas fa-crystal-ball me-2"></i>
                                    Prediccions i Tendències
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="ai-loading" id="predictionsLoading">
                                    <div class="spinner-border text-primary" role="status"></div>
                                    <p class="mt-2">Generant prediccions...</p>
                                </div>
                                <div class="ai-content" id="predictionsContent">
                                    Carrega l'anàlisi per veure les prediccions basades en IA.
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Chat Modal -->
    <div class="modal fade" id="chatModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <img src="{{ url_for('static', filename='images/bitabot.png') }}" alt="BitaBot" style="width: 32px; height: 32px; margin-right: 8px;">
                        Chat amb BitaBot
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="chat-container" id="chatContainer">
                        <div class="chat-message chat-ai">
                            <div class="d-flex align-items-start">
                                <img src="{{ url_for('static', filename='images/bitabot.png') }}" alt="BitaBot" style="width: 24px; height: 24px; margin-right: 8px; margin-top: 2px;">
                                <div>
                                    <strong>BitaBot:</strong> Hola! Sóc BitaBot i t'ajudo a analitzar les dades d'enquestes de l'Institut Bitàcola. Pots preguntar-me sobre puntuacions, tendències, comparacions entre cursos o qualsevol aspecte de les dades educatives.
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="mt-3">
                        <div class="input-group">
                            <input type="text" class="form-control" id="chatInput" placeholder="Escriu la teva pregunta...">
                            <button class="btn btn-primary" onclick="sendChatMessage()">
                                <i class="fas fa-paper-plane"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Category Analysis Modal -->
    <div class="modal fade" id="categoryModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="categoryModalTitle">Anàlisi de Categoria</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="ai-loading" id="categoryLoading">
                        <div class="spinner-border text-primary" role="status"></div>
                        <p class="mt-2">Analitzant categoria...</p>
                    </div>
                    <div id="categoryAnalysisContent"></div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentData = null;
        let chatHistory = [];

        // Load initial data
        document.addEventListener('DOMContentLoaded', function() {
            loadCategories();
        });

        async function loadAIAnalysis() {
            const course = document.getElementById('courseFilter').value;
            const trimester = document.getElementById('trimesterFilter').value;
            
            // Show loading states
            document.getElementById('overviewLoading').style.display = 'block';
            document.getElementById('predictionsLoading').style.display = 'block';
            
            try {
                // Load comprehensive analysis
                const analysisResponse = await fetch(`/api/ai/comprehensive-analysis?course=${encodeURIComponent(course)}&trimester=${encodeURIComponent(trimester)}`);
                const analysisData = await analysisResponse.json();
                
                if (analysisData.success) {
                    document.getElementById('overviewContent').innerHTML = formatMarkdown(analysisData.analysis);
                } else {
                    document.getElementById('overviewContent').textContent = `Error: ${analysisData.error}`;
                }
                
                // Load predictions
                const predictionsResponse = await fetch(`/api/ai/predictions?course=${encodeURIComponent(course)}&trimester=${encodeURIComponent(trimester)}`);
                const predictionsData = await predictionsResponse.json();
                
                if (predictionsData.success) {
                    document.getElementById('predictionsContent').innerHTML = formatMarkdown(predictionsData.predictions);
                } else {
                    document.getElementById('predictionsContent').textContent = `Error: ${predictionsData.error}`;
                }
                
                // Reload categories with new filters
                loadCategories();
                
            } catch (error) {
                document.getElementById('overviewContent').textContent = `Error de connexió: ${error.message}`;
                document.getElementById('predictionsContent').textContent = `Error de connexió: ${error.message}`;
            } finally {
                document.getElementById('overviewLoading').style.display = 'none';
                document.getElementById('predictionsLoading').style.display = 'none';
            }
        }

        async function loadCategories() {
            const course = document.getElementById('courseFilter').value;
            const trimester = document.getElementById('trimesterFilter').value;
            
            try {
                const response = await fetch(`/api/ai/categories-summary?course=${encodeURIComponent(course)}&trimester=${encodeURIComponent(trimester)}`);
                const data = await response.json();
                
                if (data.success) {
                    currentData = data.summary;
                    renderCategories(data.summary);
                } else {
                    document.getElementById('categoriesGrid').innerHTML = `<div class="col-12"><div class="alert alert-warning">${data.error}</div></div>`;
                }
            } catch (error) {
                document.getElementById('categoriesGrid').innerHTML = `<div class="col-12"><div class="alert alert-danger">Error de connexió: ${error.message}</div></div>`;
            }
        }

        function renderCategories(summary) {
            const grid = document.getElementById('categoriesGrid');
            grid.innerHTML = '';
            
            for (const [category, data] of Object.entries(summary)) {
                const scoreColor = data.average_score >= 4 ? 'success' : data.average_score >= 3.5 ? 'warning' : 'danger';
                
                const card = document.createElement('div');
                card.className = 'col-md-6 col-lg-4 mb-3';
                card.innerHTML = `
                    <div class="card category-card h-100" onclick="analyzeCategory('${category}')">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <h6 class="card-title">${category}</h6>
                                <span class="badge bg-${scoreColor} score-badge">${data.average_score}</span>
                            </div>
                            <p class="card-text text-muted small">
                                ${data.total_responses} respostes
                            </p>
                            <div class="progress mb-2" style="height: 8px;">
                                <div class="progress-bar bg-${scoreColor}" style="width: ${(data.average_score / 5) * 100}%"></div>
                            </div>
                            <small class="text-muted">Fes clic per anàlisi detallada</small>
                        </div>
                    </div>
                `;
                grid.appendChild(card);
            }
        }

        async function analyzeCategory(category) {
            const course = document.getElementById('courseFilter').value;
            
            document.getElementById('categoryModalTitle').textContent = `Anàlisi: ${category}`;
            document.getElementById('categoryLoading').style.display = 'block';
            document.getElementById('categoryAnalysisContent').innerHTML = '';
            
            const modal = new bootstrap.Modal(document.getElementById('categoryModal'));
            modal.show();
            
            try {
                const response = await fetch(`/api/ai/category-analysis?category=${encodeURIComponent(category)}&course=${encodeURIComponent(course)}`);
                const data = await response.json();
                
                if (data.success) {
                    document.getElementById('categoryAnalysisContent').innerHTML = `
                        <div class="mb-3">
                            <div class="row">
                                <div class="col-md-6">
                                    <strong>Puntuació:</strong> ${data.data.average_score}/5
                                </div>
                                <div class="col-md-6">
                                    <strong>Respostes:</strong> ${data.data.total_responses}
                                </div>
                            </div>
                        </div>
                        <div class="ai-content">${formatMarkdown(data.analysis)}</div>
                    `;
                } else {
                    document.getElementById('categoryAnalysisContent').innerHTML = `
                        <div class="alert alert-danger">${data.error}</div>
                    `;
                }
            } catch (error) {
                document.getElementById('categoryAnalysisContent').innerHTML = `
                    <div class="alert alert-danger">Error de connexió: ${error.message}</div>
                `;
            } finally {
                document.getElementById('categoryLoading').style.display = 'none';
            }
        }

        function showChat() {
            const modal = new bootstrap.Modal(document.getElementById('chatModal'));
            modal.show();
        }

        async function sendChatMessage() {
            const input = document.getElementById('chatInput');
            const question = input.value.trim();
            
            if (!question) return;
            
            // Add user message to chat
            addChatMessage(question, 'user');
            input.value = '';
            
            // Add loading message
            const loadingId = addChatMessage('Pensant...', 'ai', true);
            
            try {
                const course = document.getElementById('courseFilter').value;
                const trimester = document.getElementById('trimesterFilter').value;
                
                const response = await fetch('/api/ai/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        question: question,
                        course: course,
                        trimester: trimester
                    })
                });
                
                const data = await response.json();
                
                // Remove loading message
                document.getElementById(loadingId).remove();
                
                if (data.success) {
                    addChatMessage(data.response, 'ai', false, true);
                } else {
                    addChatMessage(`Error: ${data.error}`, 'ai');
                }
                
            } catch (error) {
                document.getElementById(loadingId).remove();
                addChatMessage(`Error de connexió: ${error.message}`, 'ai');
            }
        }

        function addChatMessage(message, sender, isLoading = false, useMarkdown = false) {
            const container = document.getElementById('chatContainer');
            const messageDiv = document.createElement('div');
            const messageId = 'msg_' + Date.now();
            
            messageDiv.id = messageId;
            messageDiv.className = `chat-message chat-${sender}`;
            
            const formattedMessage = useMarkdown ? formatMarkdown(message) : message;
            
            if (sender === 'ai') {
                messageDiv.innerHTML = `
                    <div class="d-flex align-items-start">
                        <img src="{{ url_for('static', filename='images/bitabot.png') }}" alt="BitaBot" style="width: 24px; height: 24px; margin-right: 8px; margin-top: 2px; flex-shrink: 0;">
                        <div>
                            <strong>BitaBot:</strong> ${formattedMessage}
                        </div>
                    </div>
                `;
            } else {
                messageDiv.innerHTML = `
                    <div class="d-flex align-items-start justify-content-end">
                        <div style="text-align: right;">
                            <strong>Tu:</strong> ${formattedMessage}
                        </div>
                        <i class="fas fa-user-circle ms-2" style="font-size: 24px; color: #007bff; margin-top: 2px;"></i>
                    </div>
                `;
            }
            
            container.appendChild(messageDiv);
            container.scrollTop = container.scrollHeight;
            
            return messageId;
        }

        function formatMarkdown(text) {
            if (!text) return '';
            
            // Convert Markdown to HTML with improved formatting
            let formattedText = text
                // Convert headers
                .replace(/###\s+(.*?)$/gm, '<h5 class="text-primary mt-3 mb-2"><i class="fas fa-chevron-right me-2"></i>$1</h5>')
                .replace(/##\s+(.*?)$/gm, '<h4 class="text-primary mt-3 mb-2"><i class="fas fa-star me-2"></i>$1</h4>')
                .replace(/^\d+\.\s\*\*(.*?)\*\*/gm, '<h5 class="text-primary mt-3 mb-2"><i class="fas fa-angle-right me-2"></i>$1</h5>')
                // Convert bold and italic
                .replace(/\*\*(.*?)\*\*/g, '<strong class="text-dark">$1</strong>')
                .replace(/\*(.*?)\*/g, '<em>$1</em>')
                // Convert lists
                .replace(/^[\-\*]\s+(.+)$/gm, '<li class="mb-1">$1</li>')
                // Convert numbered lists
                .replace(/^\d+\.\s+(.+)$/gm, '<li class="mb-1">$1</li>')
                // Handle line breaks and paragraphs
                .replace(/\n\n+/g, '\n\n')
                .split('\n\n')
                .map(paragraph => {
                    if (paragraph.includes('<li>')) {
                        return '<ul class="list-unstyled ps-3 mt-2 mb-2">' + paragraph.replace(/\n/g, '') + '</ul>';
                    } else if (paragraph.includes('<h')) {
                        return paragraph;
                    } else if (paragraph.trim()) {
                        return '<p class="mb-2">' + paragraph.replace(/\n/g, '<br>') + '</p>';
                    }
                    return '';
                })
                .join('');
            
            // Clean up any empty elements
            formattedText = formattedText
                .replace(/<p class="mb-2"><\/p>/g, '')
                .replace(/<ul class="list-unstyled ps-3 mt-2 mb-2"><\/ul>/g, '');
            
            return formattedText;
        }

        // Allow Enter key to send messages
        document.getElementById('chatInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendChatMessage();
            }
        });
    </script>
    {% endblock %}
</body>
</html>